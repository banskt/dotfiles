#!/usr/bin/env bash
#

# If this file is sourced, then source the functions and exit.
# Otherwise, run the commands
(return 0 2>/dev/null) && is_sourced=1 || is_sourced=0

function e_header()   { echo -e "\n\033[1m$@\033[0m"; }
function e_success()  { echo -e " \033[1;32m✔\033[0m  $@"; }
function e_error()    { echo -e " \033[1;31m✖\033[0m  $@"; }
function e_warning()  { echo -e " \033[1;33m!\033[0m  $@"; }
function e_arrow()    { echo -e " \033[1;34m➜\033[0m  $@"; }

function _do_check() {
    local albumpath
    local dstdir
    local user_response
    albumpath="${1}"
    dstdir="${2}"
    redflac --check -r -f "${albumpath}"
    redflac --show-tags -r -f "${albumpath}"
    touch "${albumpath}/.check"
    e_arrow "Do you want to enter any check comments? [y] Yes [n] No"
    read -p "Enter one option: " user_response 0</dev/tty
    e_arrow "Enter the comments at the prompt. You can enter multiple comments."
    e_arrow "Type \"quit\" to exit"
    if [[ "${user_response}" == "y" ]]; then
        has_comments=1
        while [[ "${has_comments}" == "1" ]]
        do
            read -p "Enter comment: " user_comment 0</dev/tty
            if [[ "${user_comment}" == "quit" ]]; then
                has_comments=0
                continue
            else
                echo "${user_comment}" >> "${albumpath}/.check"
            fi
        done
    fi
    e_arrow "Select result: [1] Success [2] Failure/Trump."
    read -p "Enter one option: " user_response 0</dev/tty
    if [[ "${user_response}" == "1" ]]; then
        touch "${albumpath}/.checksuccess"
    fi
    if [[ "${user_response}" == "2" ]]; then
        cp -r "${albumpath}" "${dstdir}/"
        touch "${albumpath}/.checktrump"
    fi
}


# =================================================
# EXIT now if sourced, else continue
# =================================================
[[ "$is_sourced" == 1 ]] && return


srcdir="$( realpath "${1}" )"
dstdir="$( realpath "${2}" )"

e_header "Source"
echo "${srcdir}"

e_header "Trump Destination"
echo "${dstdir}"


is_skip_all="false"
find "${srcdir}" -mindepth 1 -maxdepth 1 -type d -print0 | \
    while read -r -d $'\0' albumpath
    do
        albumname=$( basename "${albumpath}" )
        # Check for dotfile flags
        #
        if ( [[ -f "${albumpath}/.checktrump" ]] || [[ -f "${albumpath}/.checksuccess" ]] ); then
            e_success "${albumname} has been checked."
        else
            e_error "${albumname}" 
            if [[ ! "${is_skip_all}" == "true" ]]
            then
                e_arrow "Do you want to check this album? [y] Yes [n] No [s] Skip all"
                #read -u 2 -p "Enter one option: " user_response
                read -p "Enter one option: " user_response 0</dev/tty
                [[ "${user_response}" == "s" ]] && is_skip_all="true"
                [[ "${user_response}" == "y" ]] && _do_check "${albumpath}" "${dstdir}"
            fi
        fi
    done
