#!/usr/bin/env bash

_METAPATH="${HOME}/${1}"
_DATAPATH="${HOME}/${2}"
_RUTORRENT_TAG="${3}"

if [[ -z "${_RUTORRENT_TAG}" ]]; then
    _RUTORRENT_TAG="BTNarXiv"
fi
PACKNAME="$( basename ${_METAPATH} )"

VERBOSE_FLAG=1
DEBUG_FLAG=0

function _is_verbose() {
    [[ "$VERBOSE_FLAG" == 1 ]] || return 1

}

function _is_debug() {
    [[ "$DEBUG_FLAG" == 1 ]] || return 1
}


function _vlog() {
    { _is_verbose && echo "${@}"; } || return 0
}


function _dbglog() {
    { _is_debug && echo "${@}"; } || return 0
}

## Load a torrent with a specified download directory, 
## priority 2 (normal), and rutorrent tag 'BTNarXiv'
## 
## Usage:
##     _load_to_rtorrent /path/to/metafile /path/to/datadir
## 
## All XMLPPC commands (with a few exceptions like system.listMethods) 
## take an info hash as the first argument when called over the API,
## to uniquely identify the target object. 
## 'Target' is also the term used for that first parameter 
## in error messages like Unsupported target type found, 
## and that message is the one youâ€™ll most likely get 
## if you forgot to provide one.
## Commands that do not target a specific item still need to have one 
## (in newer versions of rTorrent), so provide an empty string 
## as a placeholder in those cases.
## Read how to configure targets: 
##     https://github.com/rakshasa/rtorrent/wiki/RPC-Utility-XMLRPC2SCGI
##
## There is no comprehensive documentation for rtorrent,
## To get started look at the list of all commands:
##     https://github.com/rakshasa/rtorrent/wiki/rTorrent-0.9-Comprehensive-Command-list-(WIP)
##     https://rtorrent-docs.readthedocs.io/en/latest/genindex.html
##
function _load_single_torrent() {
    # full path of the torrent file
    local metapath="${1}"
    # directory where the data can be found
    local rt_datapath="${2}"
    # tag for the entry
    local rt_tag="${3}"
    # a new file for the fast resume information
    local fastpath="${metapath%.torrent}.chtor_fastresume.torrent"
    # name of the data file
    local fname="$( lstor -qo info.name ${metapath} )"
    # full path of the data file
    local datapath="${rt_datapath}/${fname}"

    _dbglog "  Loading single torrent."
    _dbglog "    metapath: ${metapath}"
    _dbglog "    datadir: ${rt_datapath}"
    _dbglog "    info.name ${fname}"
    _dbglog "    datapath: ${datapath}"
    _dbglog "    fastresume_path: ${fastpath}"

    # do not change the original torrent file
    [[ -f ${fastpath} ]] || cp ${metapath} ${fastpath}

    # add fast resume information
    if ( chtor -q --fast-resume="${datapath}" "${fastpath}" ); then
        _vlog "${fname} | Added fast resume information. Loading torrent..."
        _vlog "${fname} | Path: ${rt_datapath}"

        # rtorrent requires parent directory
        if ( rtxmlrpc -q load.start_verbose '' "${fastpath}" \
                            "d.directory.set=\"${rt_datapath}\"" \
                            "d.custom1.set=${rt_tag}" \
                            "d.priority.set=2" ); then
            _vlog "${fname} | Loaded torrent successfully."
        else
            _vlog "${fname} | ERROR: rtxmlrpc failed to load torrent."
        fi
    else
        _vlog "${fname} | Failed to add fast resume information."
    fi
}

function _load_all_torrents() {
    local metadir="${1}"
    local datadir="${2}"
    local rt_tag="${3}"
    _dbglog "  Loading all torrents from"
    _dbglog "    metadir: ${metadir}"
    _dbglog "    datadir: ${datadir}"
    find "${metadir}/" -regextype sed -regex '^'${metadir}'/[0-9a-fA-F]\{40\}\.torrent' -type f -print0 | while read -r -d $'\0' metapath
    do
        _load_single_torrent "${metapath}" "${datadir}" "${rt_tag}"
    done
}


echo "Loading ${PACKNAME}"
_dbglog "    Metapath: ${_METAPATH}"
_dbglog "    Datapath: ${_DATAPATH}"
#####################
# Load SEASON
#####################
if [[ -d "${_METAPATH}/season" ]]; then
    _load_all_torrents "${_METAPATH}/season" "$( dirname ${_DATAPATH} )" "${_RUTORRENT_TAG}"
else
    _vlog "    No season directory found."
fi

#####################
# Load EPISODES
#####################
if [[ -d "${_METAPATH}/episodes" ]]; then
    _load_all_torrents "${_METAPATH}/episodes" "${_DATAPATH}" "${_RUTORRENT_TAG}"
else
    _vlog "    No episode directory found."
fi
