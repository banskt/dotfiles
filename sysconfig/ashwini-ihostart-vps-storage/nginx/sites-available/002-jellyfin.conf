# access to the raw port
server {
    listen 80;
    listen [::]:80;
    server_name jellyfin.sbanerjee.in;

	location = / {
        return 302 http://$host/web/;
    }

	set $jellyfin 127.0.0.1;
    #resolver 127.0.0.53;

	location / {
		proxy_pass http://$jellyfin:8096;
        #proxy_set_header X-Forwarded-Proto $scheme;
        #proxy_set_header X-Forwarded-Protocol $scheme;
        #proxy_set_header X-Forwarded-Host $http_host;
	}

    location = /web/ {
        # Proxy main Jellyfin traffic
        proxy_pass http://$jellyfin:8096/web/index.html;
        #proxy_set_header X-Forwarded-Proto $scheme;
        #proxy_set_header X-Forwarded-Protocol $scheme;
        #proxy_set_header X-Forwarded-Host $http_host;
    }

    location /socket {
        # Proxy Jellyfin Websockets traffic
        proxy_pass http://$jellyfin:8096;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        #proxy_set_header X-Forwarded-Proto $scheme;
        #proxy_set_header X-Forwarded-Protocol $scheme;
        #proxy_set_header X-Forwarded-Host $http_host;
    }
}


## server {
##     listen 443 ssl http2;
##     listen [::]:443 ssl http2;
##     server_name jellyfin.sbanerjee.in;
## 
##     ## The default `client_max_body_size` is 1M, this might not be enough for some posters, etc.
##     client_max_body_size 20M;
## 
##     # use a variable to store the upstream proxy
##     # in this example we are using a hostname which is resolved via DNS
##     # (if you aren't using DNS remove the resolver line and change the variable to point to an IP address e.g `set $jellyfin 127.0.0.1`)
##     set $jellyfin 127.0.0.1;
##     # resolver 127.0.0.53; # defined in ssl_params.conf
## 
##     # SSL certificates
##     ssl_certificate         /home/banskt/local/etc/nginx/ssl/jellyfin.sbanerjee.in/fullchain.pem;
##     ssl_certificate_key     /home/banskt/local/etc/nginx/ssl/jellyfin.sbanerjee.in/privkey.pem;
##     # verify chain of trust of OCSP response using Root CA and Intermediate certs
##     ssl_trusted_certificate /home/banskt/local/etc/nginx/ssl/jellyfin.sbanerjee.in/fullchain.pem;
##     include                 /opt/nginx/conf/ssl_params.conf;
## 
##     # Tell browsers to use per-origin process isolation
##     # add_header Origin-Agent-Cluster "?1" always;
##     add_header 'Access-Control-Allow-Origin' '*' always;
## 
##     location = / {
##         return 302 https://$host/web/;
##     }
## 
##     location / {
##         # Proxy main Jellyfin traffic
##         proxy_pass http://$jellyfin:8096;
##         #proxy_set_header X-Forwarded-Proto $scheme;
##         #proxy_set_header X-Forwarded-Protocol $scheme;
##         #proxy_set_header X-Forwarded-Host $http_host;
##     }
## 
##     location = /web/ {
##         # Proxy main Jellyfin traffic
##         proxy_pass http://$jellyfin:8096/web/index.html;
##         #proxy_set_header X-Forwarded-Proto $scheme;
##         #proxy_set_header X-Forwarded-Protocol $scheme;
##         #proxy_set_header X-Forwarded-Host $http_host;
##     }
## 
##     location /socket {
##         # Proxy Jellyfin Websockets traffic
##         proxy_pass http://$jellyfin:8096;
##         proxy_http_version 1.1;
##         proxy_set_header Upgrade $http_upgrade;
##         proxy_set_header Connection "upgrade";
##         #proxy_set_header X-Forwarded-Proto $scheme;
##         #proxy_set_header X-Forwarded-Protocol $scheme;
##         #proxy_set_header X-Forwarded-Host $http_host;
##     }
## }
